# This file is part of the OpenADK project. OpenADK is copyrighted
# material, please see the LICENCE file in the top-level directory.

config ADK_RUNTIME_DATA_PARTITION
	bool

config ADK_RUNTIME_HOSTNAME
	string "hostname for the embedded system"
	default "openadk"
	help
	  Set your target hostname.

choice
prompt "init system"
depends on !ADK_APPLIANCE_TOOLCHAIN
default ADK_RUNTIME_INIT_SYSV if ADK_PACKAGE_BUSYBOX
default ADK_RUNTIME_INIT_SIMPLEINIT if ADK_PACKAGE_TOOLBOX
default ADK_RUNTIME_INIT_SIMPLEINIT if ADK_TARGET_SYSTEM_SIPEED_MAIX_BIT

config ADK_RUNTIME_INIT_SYSV
	bool "Use busybox init"
	depends on ADK_PACKAGE_BUSYBOX && \
		   !ADK_TARGET_SYSTEM_SIPEED_MAIX_BIT

config ADK_RUNTIME_INIT_SIMPLEINIT
	bool "Use a very simple init"
	select ADK_PACKAGE_SIMPLEINIT

endchoice

choice
prompt "system for /dev management"
depends on !ADK_APPLIANCE_TOOLCHAIN
default ADK_RUNTIME_DEV_STATIC

config ADK_RUNTIME_DEV_STATIC
	bool "Use static /dev (devtmpfs)"
	select ADK_LINUX_KERNEL_DEVTMPFS if ADK_TARGET_OS_LINUX
	select ADK_LINUX_KERNEL_DEVTMPFS_MOUNT if ADK_TARGET_OS_LINUX

config ADK_RUNTIME_DEV_MDEV
	bool "Use dynamic /dev with mdev"
	select ADK_LINUX_KERNEL_DEVTMPFS if ADK_TARGET_OS_LINUX
	select ADK_LINUX_KERNEL_DEVTMPFS_MOUNT if ADK_TARGET_OS_LINUX
	depends on ADK_PACKAGE_BUSYBOX

config ADK_RUNTIME_DEV_MDEV_LOGGING
	bool "Log mdev events into /dev/mdev.log"
	depends on ADK_RUNTIME_DEV_MDEV

config ADK_RUNTIME_DEV_UDEV
	bool "Use dynamic /dev with udev"
	select ADK_PACKAGE_UDEV
	# needs depmod for module dependency generation on host
	select ADK_HOST_BUILD_KMOD
	select ADK_LINUX_KERNEL_DEVTMPFS if ADK_TARGET_OS_LINUX
	select ADK_LINUX_KERNEL_DEVTMPFS_MOUNT if ADK_TARGET_OS_LINUX

endchoice

choice
prompt "base applications"
depends on !ADK_APPLIANCE_TOOLCHAIN
default ADK_RUNTIME_BASE_TOOLBOX if ADK_TARGET_ARCH_H8300
default ADK_RUNTIME_BASE_BUSYBOX

config ADK_RUNTIME_BASE_BUSYBOX
	bool "Use busybox"
	select ADK_PACKAGE_BUSYBOX

config ADK_RUNTIME_BASE_TOYBOX
	bool "Use toybox"
	select ADK_PACKAGE_TOYBOX

config ADK_RUNTIME_BASE_TOOLBOX
	bool "Use toolbox"
	select ADK_PACKAGE_TOOLBOX

config ADK_RUNTIME_BASE_COREUTILS
	bool "Use coreutils"
	select ADK_PACKAGE_COREUTILS
	select ADK_PACKAGE_GREP
	select ADK_PACKAGE_FIND

config ADK_RUNTIME_BASE_NONE
	bool "Use no base tools"

endchoice

config ADK_RUNTIME_LOAD_KERNEL_MODULES
	bool "load all installed kernel modules on bootup"
	default y
	help
	  If you don't want to load all installed kernel modules
	  by default on bootup, disable this option.

config ADK_RUNTIME_FIX_PERMISSION
	bool "fix permissions for target files (suid bit, ..)"
	select ADK_HOST_BUILD_FAKEROOT
	depends on ADK_TARGET_ROOTFS_GENIMAGE
	help
	  Use fakeroot to fix permissions for target dir before image
	  creation.

config ADK_RUNTIME_SSH_PUBKEY
	string "SSH public key (root user only)"
	depends on ADK_PACKAGE_OPENSSH_SERVER || ADK_PACKAGE_DROPBEAR
	default ""
	help
	  Paste your generated SSH public key here and it will be embedded into
	  the built image, so you can use it to login instantly.

config ADK_RUNTIME_PASSWORD
	string "root password for the embedded system"
	default "$1$bJoW4DmS$7fUVat.9iFSAePzA4j4Jm."
	help
	  Predefine the root password enabled in the built image.
	  Use ./host_*/usr/bin/mkcrypt to generate the hash.
	  Default password is linux123

config ADK_RUNTIME_ADDUSER
	bool "add an user"
	default n
	help
	  Enable this option to add an unprivileged user.
	  Fixed UID/GID 100 is used. A group with the same name is added.

config ADK_RUNTIME_USER_NAME
	string "user name"
	default "adk"
	depends on ADK_RUNTIME_ADDUSER

config ADK_RUNTIME_USER_PASSWORD
	string "user password"
	default "$1$bJoW4DmS$7fUVat.9iFSAePzA4j4Jm."
	depends on ADK_RUNTIME_ADDUSER
	help
	  Predefine the user password enabled in the built image.
	  Use ./host_*/usr/bin/mkcrypt to generate the hash.
	  Default password is linux123

config ADK_RUNTIME_USER_HOME
	string "user home directory"
	default "/home/adk"
	depends on ADK_RUNTIME_ADDUSER
	help
	  Set the home directory to use.

config ADK_RUNTIME_USER_SHELL
	string "user shell"
	default "/bin/sh"
	depends on ADK_RUNTIME_ADDUSER
	help
	  Set the shell to use.

config ADK_RUNTIME_MOUNT_DEBUGFS
	bool "mount debugfs"
	help
	  mount debugfs under /sys/kernel/debug

config ADK_RUNTIME_START_SERVICES
	bool "start services by default"
	default n
	help
	  Enable this option to start selected services on boot.

source "target/config/Config.in.scripts"

config ADK_RUNTIME_TMPFS_SIZE
	string "size of /tmp in memory (kB)"
	default "32768" if ADK_TARGET_SYSTEM_RASPBERRY_PI
	default "32768" if ADK_TARGET_SYSTEM_RASPBERRY_PI2
	default "32768" if ADK_TARGET_SYSTEM_RASPBERRY_PI3
	default "32768" if ADK_TARGET_SYSTEM_RASPBERRY_PI4
	default "32768" if ADK_TARGET_SYSTEM_RASPBERRY_PI3_64
	default "32768" if ADK_TARGET_SYSTEM_RASPBERRY_PI4_64
	default "32768" if ADK_TARGET_SYSTEM_SOLIDRUN_IMX6
	default "16384" if ADK_TARGET_SYSTEM_QEMU_X86_64
	default "16384" if ADK_TARGET_SYSTEM_QEMU_X86
	default "16384" if ADK_TARGET_SYSTEM_LEMOTE_YEELONG
	default "8192" if ADK_TARGET_SYSTEM_MIKROTIK_RB532
	default "1024"
	depends on !ADK_RUNTIME_INIT_SIMPLEINIT
	help
	  Size of /tmp in memory in Kilobyte.

config ADK_RUNTIME_TIMEZONE
	string "timezone for the embedded system"
	default "Europe/Berlin"
	help
	  Predefine the timezone for the embedded system.

config ADK_RUNTIME_DEFAULT_LOCALE
	string "default locale"
	depends on ADK_TARGET_LIBC_WITH_LOCALE \
		|| ADK_TARGET_LIB_GLIBC || ADK_TARGET_LIB_MUSL
	default "en_US.UTF-8"
	help
	  Locale to be set in the target system as default.

choice
prompt "bootup messages from kernel"
default ADK_RUNTIME_VERBOSE_KERNEL_SERIAL_ONLY if ADK_TARGET_QEMU

config ADK_RUNTIME_VERBOSE_KERNEL_VGA_ONLY
	bool "output via VGA only"
	depends on ADK_TARGET_WITH_VGA \
		|| ADK_TARGET_GENERIC

config ADK_RUNTIME_VERBOSE_KERNEL_SERIAL_ONLY
	bool "output via serial console only"
	depends on ADK_TARGET_WITH_SERIAL \
		|| ADK_TARGET_QEMU \
		|| ADK_TARGET_SIM \
		|| ADK_TARGET_GENERIC

config ADK_RUNTIME_VERBOSE_KERNEL_VGA_SERIAL
	bool "output via VGA and serial console"
	depends on ADK_TARGET_WITH_SERIAL && \
		   ADK_TARGET_WITH_VGA || \
		   ADK_TARGET_GENERIC
	help
	  Output is via VGA and serial console. 
	  Init can use only serial via /dev/console.

config ADK_RUNTIME_VERBOSE_KERNEL_SERIAL_VGA
	bool "output via serial console and VGA"
	depends on ADK_TARGET_WITH_SERIAL && \
		   ADK_TARGET_WITH_VGA || \
		   ADK_TARGET_GENERIC
	help
	  Output is via serial console and VGA. 
	  Init can use only VGA via /dev/console.

config ADK_RUNTIME_QUIET_KERNEL
	bool "no output from the kernel"
	help
	  Make bootup quiet without messages from the kernel.

endchoice

choice
prompt "bootup messages from initscripts"
default ADK_RUNTIME_VERBOSE_INIT_VGA if ADK_TARGET_WITH_VGA
default ADK_RUNTIME_VERBOSE_INIT_SERIAL

config ADK_RUNTIME_VERBOSE_INIT_VGA
	bool "output via VGA"
	depends on ADK_TARGET_WITH_VGA || ADK_TARGET_GENERIC
	depends on ADK_RUNTIME_VERBOSE_KERNEL_SERIAL_VGA || \
		   ADK_RUNTIME_VERBOSE_KERNEL_VGA_ONLY || \
		   ADK_RUNTIME_QUIET_KERNEL

config ADK_RUNTIME_VERBOSE_INIT_SERIAL
	bool "output via serial"
	depends on ADK_TARGET_WITH_SERIAL \
		|| ADK_TARGET_QEMU \
		|| ADK_TARGET_SIM \
		|| ADK_TARGET_GENERIC
	depends on ADK_RUNTIME_VERBOSE_KERNEL_VGA_SERIAL || \
		   ADK_RUNTIME_VERBOSE_KERNEL_SERIAL_ONLY || \
		   ADK_RUNTIME_QUIET_KERNEL

config ADK_RUNTIME_QUIET_INIT
	bool "no output"

endchoice

choice
prompt "start getty or shell after bootup"
default ADK_RUNTIME_GETTY

config ADK_RUNTIME_GETTY
	bool "start a getty after bootup"
	help
	  Start a getty after bootup.

config ADK_RUNTIME_SHELL
	bool "start a shell after bootup"
	help
	  Start a shell after bootup.

config ADK_RUNTIME_NONE
	bool "start no shell nor getty after bootup"
	help
	  Do not start a shell or getty after bootup.

endchoice

config ADK_RUNTIME_GETTY_VGA
	bool "start getty on VGA console (tty1-tty6)"
	depends on ADK_RUNTIME_GETTY \
                && (ADK_TARGET_WITH_VGA || ADK_TARGET_GENERIC)
	default y if ADK_TARGET_QEMU_WITH_GRAPHIC_ONLY
	default y if ADK_TARGET_QEMU_WITH_GRAPHIC
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI0
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI2
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI3
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI4
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI3_64
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI4_64
	default y if ADK_TARGET_SYSTEM_SOLIDRUN_IMX6
	default y if ADK_TARGET_SYSTEM_LEMOTE_YEELONG
	default y if ADK_TARGET_SYSTEM_ARANYM_M68K
	default y if ADK_TARGET_MODEL_PCENGINES_ALIX1C
	default n
	help
          Start getty on VGA console. (tty1-tty6)

config ADK_RUNTIME_GETTY_SERIAL
	bool "start getty on serial console"
	depends on ADK_RUNTIME_GETTY && ( ADK_TARGET_WITH_SERIAL \
		|| ADK_TARGET_QEMU \
		|| ADK_TARGET_GENERIC \
		|| ADK_TARGET_SIM )
	default n if ADK_TARGET_QEMU_WITH_GRAPHIC_ONLY
	default n if ADK_TARGET_QEMU_WITH_GRAPHIC
	default n if ADK_TARGET_SYSTEM_RASPBERRY_PI
	default n if ADK_TARGET_SYSTEM_RASPBERRY_PI2
	default n if ADK_TARGET_SYSTEM_RASPBERRY_PI3
	default n if ADK_TARGET_SYSTEM_RASPBERRY_PI4
	default n if ADK_TARGET_SYSTEM_RASPBERRY_PI3_64
	default n if ADK_TARGET_SYSTEM_RASPBERRY_PI4_64
	default n if ADK_TARGET_SYSTEM_LEMOTE_YEELONG
	default n if ADK_TARGET_SYSTEM_ARANYM_M68K
	default n if ADK_TARGET_MODEL_PCENGINES_ALIX1C
	default y
	help
	  Start getty on serial console.

config ADK_RUNTIME_GETTY_SERIAL_AUTOLOGIN
       bool "run autologin on serial getty"
       depends on ADK_RUNTIME_GETTY_SERIAL
       select ADK_PACKAGE_AUTOLOGIN

config ADK_RUNTIME_CONSOLE_VGA_DEVICE
	string "VGA console device"
	depends on ADK_TARGET_WITH_VGA || ADK_TARGET_GENERIC
	default "tty0"

config ADK_RUNTIME_CONSOLE_SERIAL_DEVICE
	string "serial console device"
	depends on ADK_TARGET_WITH_SERIAL \
		|| ADK_TARGET_QEMU \
		|| ADK_TARGET_GENERIC \
		|| ADK_TARGET_SIM
	default "hvc0" if ADK_TARGET_SYSTEM_QEMU_PPC64
	default "ttyBF0" if ADK_TARGET_ARCH_BFIN
	default "ttyUL0" if ADK_TARGET_SYSTEM_QEMU_MICROBLAZE_S3ADSP1800 \
				|| ADK_TARGET_SYSTEM_NUMATO_MIMASV2
	default "ttyAMA0" if ADK_TARGET_SYSTEM_QEMU_ARM_VERSATILEPB \
				|| ADK_TARGET_SYSTEM_QEMU_ARM_REALVIEW_EB_MPCORE \
				|| ADK_TARGET_SYSTEM_QEMU_ARM_VEXPRESS_A9 \
				|| ADK_TARGET_SYSTEM_QEMU_AARCH64
	default "ttyARC0" if ADK_TARGET_SYSTEM_SYNOPSYS_NSIM
	default "ttySC1" if ADK_TARGET_SYSTEM_QEMU_SH
	default "ttySC0" if ADK_TARGET_SYSTEM_SIM_H8300H
	default "ttySC2" if ADK_TARGET_SYSTEM_HITACHI_EDOSK2674
	default "ttySIF0" if ADK_TARGET_SYSTEM_SIPEED_MAIX_BIT
	default "ttymxc0" if ADK_TARGET_SYSTEM_SOLIDRUN_IMX6
	default "ttymxc1" if ADK_TARGET_SYSTEM_PHYTEC_IMX6
	default "ttyAMA0" if ADK_TARGET_SYSTEM_RASPBERRY_PI
	default "ttyAMA0" if ADK_TARGET_SYSTEM_RASPBERRY_PI2
	default "ttyAMA0" if ADK_TARGET_SYSTEM_RASPBERRY_PI3
	default "ttyAMA0" if ADK_TARGET_SYSTEM_RASPBERRY_PI4
	default "ttyAMA0" if ADK_TARGET_SYSTEM_RASPBERRY_PI3_64
	default "ttyAMA0" if ADK_TARGET_SYSTEM_RASPBERRY_PI4_64
	default "ttyDA1" if ADK_TARGET_SYSTEM_QEMU_METAG
	default "ttyS2" if ADK_TARGET_SYSTEM_KINETIS_K70
	default "ttyS2" if ADK_TARGET_SYSTEM_SOM_C6745
	default "ttyS2" if ADK_TARGET_SYSTEM_ROCKPI4_PLUS
	default "ttyPS0" if ADK_TARGET_SYSTEM_QEMU_ARM_XILINX_ZYNQ
	default "ttysclp0" if ADK_TARGET_SYSTEM_QEMU_S390
	default "ttyO2" if ADK_TARGET_SYSTEM_BEAGLEBONE_BLACK
	default "ttyO0" if ADK_TARGET_SYSTEM_PHYTEC_WEGA
	default "ttyS4" if ADK_TARGET_SYSTEM_IMGTEC_CI20
	default "ttySTM0" if ADK_TARGET_SYSTEM_ST_STM32F746G
	default "ttyS0"

config ADK_RUNTIME_CONSOLE_SERIAL_SPEED
	string "serial console speed"
	depends on ADK_TARGET_WITH_SERIAL \
		|| ADK_TARGET_QEMU \
		|| ADK_TARGET_GENERIC \
		|| ADK_TARGET_SIM
	default "9600" if ADK_TARGET_SYSTEM_FON_FON2100
	default "38400" if ADK_TARGET_SYSTEM_PCENGINES_WRAP
	default "38400" if ADK_TARGET_SYSTEM_ANDES_AG101P
	default "38400" if ADK_TARGET_SYSTEM_HITACHI_EDOSK2674
	default "38400" if ADK_TARGET_SYSTEM_NUMATO_MIMASV2
	default "115200"

config ADK_RUNTIME_KBD_LAYOUT
	string "keyboard layout for the embedded system"
	depends on ADK_TARGET_WITH_INPUT
	default "de-latin1-nodeadkeys"
	help
	  Predefine the keyboard layout for the embedded system.
	  For example use de-latin1-nodeadkeys.

choice
prompt "initial login shell for the root user"
default ADK_ROOTSH_HUSH if !ADK_TARGET_WITH_MMU
default ADK_ROOTSH_MKSH

config ADK_ROOTSH_MKSH
	bool "mksh (MirBSD Korn Shell)"
	select ADK_PACKAGE_MKSH if !ADK_APPLIANCE_TOOLCHAIN
	depends on ADK_TARGET_WITH_MMU
	help
	  Use mksh (a Korn Shell variant) as standard login shell
	  for the superuser.

config ADK_ROOTSH_HUSH
	bool "hush (busybox shell compatible with non-MMU systems)"
	select BUSYBOX_HUSH if !ADK_APPLIANCE_TOOLCHAIN
	select BUSYBOX_SH_IS_HUSH if !ADK_APPLIANCE_TOOLCHAIN
	help
	  hush shell from busybox.

config ADK_ROOTSH_SASH
	bool "sash (Shell compatible with non-MMU systems)"
	select ADK_PACKAGE_SASH if !ADK_APPLIANCE_TOOLCHAIN
	help
	  standalone shell.

config ADK_ROOTSH_ASH
	bool "ash (busybox shell)"
	select BUSYBOX_ASH
	select BUSYBOX_SH_IS_ASH
	depends on ADK_TARGET_WITH_MMU
	help
	  Use the minimalistic ash variant that is part of busybox
	  as standard login shell for the superuser. This is the
	  default, but discouraged due to its frugality.

config ADK_ROOTSH_BASH
	bool "bash (GNU Bourne-Again Shell)"
	select ADK_PACKAGE_BASH
	depends on ADK_TARGET_WITH_MMU
	help
	  Use GNU bash as standard login shell for the superuser.

config ADK_ROOTSH_TCSH
	bool "tcsh (Tenex C Shell)"
	select ADK_PACKAGE_TCSH
	depends on ADK_TARGET_WITH_MMU
	help
	  Use tcsh (a C Shell variant) as standard login shell
	  for the superuser.

config ADK_ROOTSH_ZSH
	bool "zsh (The Z Shell)"
	select ADK_PACKAGE_ZSH
	depends on ADK_TARGET_WITH_MMU
	help
	  Use zsh as standard login shell for the superuser.

endchoice

choice
prompt "system /bin/sh (POSIX script shell)"
default ADK_BINSH_HUSH if !ADK_TARGET_WITH_MMU
default ADK_BINSH_MKSH

config ADK_BINSH_MKSH
	bool "mksh (MirBSD Korn Shell)"
	select ADK_PACKAGE_MKSH if !ADK_APPLIANCE_TOOLCHAIN
	depends on ADK_TARGET_WITH_MMU
	help
	  Use mksh (a Korn Shell variant) as system shell, which is
	  both small and powerful, so quite suited for this task.

config ADK_BINSH_HUSH
	bool "hush (busybox)"
	select BUSYBOX_HUSH if !ADK_APPLIANCE_TOOLCHAIN
	help
	  hush shell.

config ADK_BINSH_SASH
	bool "sash (Standalone Shell)"
	select ADK_PACKAGE_SASH if !ADK_APPLIANCE_TOOLCHAIN
	help
	  sash shell.

config ADK_BINSH_ASH
	bool "ash (busybox)"
	select BUSYBOX_ASH
	depends on ADK_TARGET_WITH_MMU
	help
	  Use the minimalistic ash variant that is part of busybox
	  as system shell. This is the default and rather small and
	  fast, but lacks scripting features.

config ADK_BINSH_BASH
	bool "bash (GNU Bourne-Again Shell)"
	select ADK_PACKAGE_BASH
	depends on ADK_TARGET_WITH_MMU
	help
	  Use GNU bash as system shell. This is discouraged due to
	  its size and slowness.

config ADK_BINSH_ZSH
	bool "zsh (The Z Shell)"
	select ADK_PACKAGE_ZSH
	depends on ADK_TARGET_WITH_MMU
	help
	  Use zsh as system shell. This is probably a bad idea.

endchoice

# workaround for USB ethernet f.e. Raspberry Pi 2/3
config ADK_RUNTIME_WAIT_FOR_ETHERNET
	bool "Wait for ethernet to come up on boot"
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI2
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI3
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI3_64
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI4
	default y if ADK_TARGET_SYSTEM_RASPBERRY_PI4_64

config ADK_SIMPLE_NETWORK_CONFIG
	bool "simple network configuration"
	help
	  Manually change network config
	  
menu "eth0 Configuration"
depends on ADK_SIMPLE_NETWORK_CONFIG
depends on ADK_TARGET_WITH_NETDEVICE

choice
prompt "Type"
default ADK_SIMPLE_NETWORK_CONFIG_ETH0_TYPE_MANUAL

config ADK_SIMPLE_NETWORK_CONFIG_ETH0_STATIC
	bool "static IP configuration"

config ADK_SIMPLE_NETWORK_CONFIG_ETH0_DHCP
	bool "DHCP"

config ADK_SIMPLE_NETWORK_CONFIG_ETH0_NONE
	bool "no configuration"

endchoice

choice
prompt "configure default Gateway"
depends on ADK_SIMPLE_NETWORK_CONFIG_ETH0_STATIC

config ADK_SIMPLE_NETWORK_CONFIG_ETH0_STATIC_WITH_GW
	bool "with Gateway"

config ADK_SIMPLE_NETWORK_CONFIG_ETH0_STATIC_WITHOUT_GW
	bool "without Gateway"

endchoice

config ADK_SIMPLE_NETWORK_CONFIG_ETH0_IP
	string "IP Address"
	depends on ADK_SIMPLE_NETWORK_CONFIG_ETH0_STATIC
	default "10.0.0.2"

config ADK_SIMPLE_NETWORK_CONFIG_ETH0_NM
	string "Netmask"
	depends on ADK_SIMPLE_NETWORK_CONFIG_ETH0_STATIC
	default "255.255.255.0"

config ADK_SIMPLE_NETWORK_CONFIG_ETH0_GW
	string "Gateway"
	depends on ADK_SIMPLE_NETWORK_CONFIG_ETH0_STATIC_WITH_GW
	default "10.0.0.1"

endmenu

menu "wlan0 Configuration"
depends on ADK_SIMPLE_NETWORK_CONFIG
depends on ADK_TARGET_WITH_WIFI

choice
prompt "Type"
default ADK_SIMPLE_NETWORK_CONFIG_WLAN0_NONE

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_NONE
	bool "No configuration"

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_STATIC
	bool "static IP configuration"

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_DHCP
	bool "DHCP"

endchoice

choice
prompt "configure default Gateway"
depends on ADK_SIMPLE_NETWORK_CONFIG_WLAN0_STATIC

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_STATIC_WITH_GW
	bool "with Gateway"

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_STATIC_WITHOUT_GW
	bool "without Gateway"

endchoice

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_IP
	string "IP Address"
	depends on ADK_SIMPLE_NETWORK_CONFIG_WLAN0_STATIC
	default "192.168.1.2"

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_NM
	string "Netmask"
	depends on ADK_SIMPLE_NETWORK_CONFIG_WLAN0_STATIC
	default "255.255.255.0"

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_GW
	string "Gateway"
	depends on ADK_SIMPLE_NETWORK_CONFIG_WLAN0_STATIC_WITH_GW
	default "192.168.1.1"

endmenu

choice
prompt "WLAN Security"
depends on ADK_SIMPLE_NETWORK_CONFIG_WLAN0_STATIC || ADK_SIMPLE_NETWORK_CONFIG_WLAN0_DHCP
default ADK_SIMPLE_NETWORK_CONFIG_WLAN0_NOSEC

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_NOSEC
	bool "No security"

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_WPA2
	bool "WPA2"

endchoice

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_WPA2_SSID
	string "SSID"
	depends on ADK_SIMPLE_NETWORK_CONFIG_WLAN0_WPA2
	default ""

config ADK_SIMPLE_NETWORK_CONFIG_WLAN0_WPA2_PW
	string "Password"
	depends on ADK_SIMPLE_NETWORK_CONFIG_WLAN0_WPA2
	default ""

menu "eth1 Configuration"
depends on ADK_SIMPLE_NETWORK_CONFIG && \
	ADK_TARGET_SYSTEM_MIKROTIK_RB532 

choice
prompt "Type"
default ADK_SIMPLE_NETWORK_CONFIG_ETH1_NONE

config ADK_SIMPLE_NETWORK_CONFIG_ETH1_STATIC
	bool "static IP configuration"

config ADK_SIMPLE_NETWORK_CONFIG_ETH1_DHCP
	bool "DHCP"

config ADK_SIMPLE_NETWORK_CONFIG_ETH1_NONE
	bool "no configuration"

endchoice

choice
prompt "configure default Gateway"
depends on ADK_SIMPLE_NETWORK_CONFIG_ETH1_STATIC

config ADK_SIMPLE_NETWORK_CONFIG_ETH1_STATIC_WITH_GW
	bool "with Gateway"

config ADK_SIMPLE_NETWORK_CONFIG_ETH1_STATIC_WITHOUT_GW
	bool "without Gateway"

endchoice

config ADK_SIMPLE_NETWORK_CONFIG_ETH1_IP
	string "IP Address"
	depends on ADK_SIMPLE_NETWORK_CONFIG_ETH1_STATIC
	default "172.16.0.2"

config ADK_SIMPLE_NETWORK_CONFIG_ETH1_NM
	string "Netmask"
	depends on ADK_SIMPLE_NETWORK_CONFIG_ETH1_STATIC
	default "255.255.0.0"

config ADK_SIMPLE_NETWORK_CONFIG_ETH1_GW
	string "Gateway"
	depends on ADK_SIMPLE_NETWORK_CONFIG_ETH1_STATIC_WITH_GW
	default "172.16.0.1"

endmenu

config ADK_SIMPLE_NETWORK_CONFIG_NS
	string "Nameserver"
	depends on ADK_SIMPLE_NETWORK_CONFIG
	depends on !ADK_SIMPLE_NETWORK_CONFIG_ETH0_DHCP
	depends on !ADK_SIMPLE_NETWORK_CONFIG_ETH1_DHCP
	depends on !ADK_SIMPLE_NETWORK_CONFIG_WLAN0_DHCP
	default "10.0.0.1"

config ADK_SIMPLE_NETWORK_CONFIG_PROXY
	string "HTTP-Proxy (f.e. http://10.0.0.2:8080)"
	depends on ADK_SIMPLE_NETWORK_CONFIG

menu "video decoding license keys"
depends on ADK_TARGET_BOARD_BCM28XX

config ADK_RUNTIME_MPEG2_KEY
	string "MPEG2"
	help
	  Hardware-specific license key for MPEG2 decoding.

config ADK_RUNTIME_VC1_KEY
	string "VC-1"
	help
	  Hardware-specific license key for VC-1 decoding.

endmenu
