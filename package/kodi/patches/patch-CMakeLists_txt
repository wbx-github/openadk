--- xbmc-21.0b2-Omega.orig/CMakeLists.txt	2023-12-09 22:24:46.000000000 +0100
+++ xbmc-21.0b2-Omega/CMakeLists.txt	2024-01-31 10:45:45.831435209 +0100
@@ -178,7 +178,6 @@ endforeach()
 # Required tools. Keep in alphabetical order please
 set(required_buildtools FlatC
                         JsonSchemaBuilder
-                        TexturePacker
 )
 
 # Optional build tools
@@ -468,7 +467,6 @@ endif()
 add_custom_command(
   OUTPUT ${CMAKE_BINARY_DIR}/${CORE_BUILD_DIR}/${CONFIG_VAR}/gen_skin.timestamp
   COMMAND ${CMAKE_COMMAND} -DBUNDLEDIR=${_bundle_dir}
-                           -DTEXTUREPACKER_EXECUTABLE=$<TARGET_FILE:TexturePacker::TexturePacker::Executable>
                            -P ${CMAKE_BINARY_DIR}/${CORE_BUILD_DIR}/GeneratedPackSkins.cmake
   COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_BINARY_DIR}/${CORE_BUILD_DIR}/${CONFIG_VAR}
   COMMAND ${CMAKE_COMMAND} -E touch ${CMAKE_BINARY_DIR}/${CORE_BUILD_DIR}/${CONFIG_VAR}/gen_skin.timestamp
@@ -481,7 +479,7 @@ add_custom_target(gen_skin_pack DEPENDS
 
 # Packaging target. This generates system addon, xbt creation, copy files to build tree
 add_custom_target(generate-packaging ALL
-                  DEPENDS TexturePacker::TexturePacker::Executable export-files gen_skin_pack gen_system_addons)
+                  DEPENDS export-files gen_skin_pack gen_system_addons)
 # Make sure we build any libs before we look to export-files.
 # We may need to export some shared libs/data (eg Python)
 add_dependencies(export-files ${GLOBAL_TARGET_DEPS})
